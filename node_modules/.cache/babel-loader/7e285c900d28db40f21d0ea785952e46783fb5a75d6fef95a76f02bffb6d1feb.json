{"ast":null,"code":"var _jsxFileName = \"/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/components/charList/CharList.js\",\n  _s = $RefreshSig$();\nimport './charList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from \"../../services/MarvelService\";\nimport { useEffect, useState, useRef } from \"react\";\nimport { PropTypes } from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharList = props => {\n  _s();\n  const [charList, setCharList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n  const marvelService = useMarvelService();\n  useEffect(() => {\n    onRequest();\n  }, []);\n  const onRequest = offset => {\n    onCharListLoading();\n    marvelService.getAllCharacters(offset).then(onCharListLoaded).catch(onError);\n  };\n  const onCharListLoading = () => {\n    setNewItemLoading(!newItemLoading);\n  };\n  const onCharListLoaded = newCharList => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n    setCharList(charList => [...charList, ...newCharList]);\n    setLoading(loading => false);\n    setNewItemLoading(newItemLoading => false);\n    setOffset(offset => offset + 9);\n    setCharEnded(charEnded => ended);\n  };\n  const itemRefs = useRef([]);\n  const focusOnItem = id => {\n    // id = порядковий номер li в массиві itemRefs\n    itemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n    itemRefs.current[id].classList.add('char__item_selected');\n    itemRefs.current[id].focus();\n  };\n  const onError = () => {\n    setError(error => true);\n    setLoading(loading => false);\n  };\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = {\n        'objectFit': 'cover'\n      };\n      if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {\n          'objectFit': 'unset'\n        };\n      }\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"char__item\",\n        ref: el => itemRefs.current[i] = el,\n        tabIndex: 0,\n        onClick: () => {\n          props.onCharSelected(item.id);\n          focusOnItem(i);\n        },\n        onKeyPress: e => {\n          if (e.key === '' || e.key === 'Enter') {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: item.thumbnail,\n          alt: item.name,\n          style: imgStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"char__name\",\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"char__grid\",\n      children: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n  const items = renderItems(charList);\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 34\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 31\n  }, this) : null;\n  const content = !(loading || error) ? items : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char__list\",\n    children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button button__main button__long\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inner\",\n        onClick: () => onRequest(offset)\n        // disabled={newItemLoading}\n        ,\n        style: {\n          'display': charEnded ? 'none' : 'block'\n        },\n        children: \"load more\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 13\n  }, this);\n};\n_s(CharList, \"TdUxugTj5wj5MYjRcX8B0nC3Qm4=\", true);\n_c = CharList;\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n};\nexport default CharList;\nvar _c;\n$RefreshReg$(_c, \"CharList\");","map":{"version":3,"names":["Spinner","ErrorMessage","MarvelService","useEffect","useState","useRef","PropTypes","jsxDEV","_jsxDEV","CharList","props","_s","charList","setCharList","loading","setLoading","error","setError","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","marvelService","useMarvelService","onRequest","onCharListLoading","getAllCharacters","then","onCharListLoaded","catch","onError","newCharList","ended","length","itemRefs","focusOnItem","id","current","forEach","item","classList","remove","add","focus","renderItems","arr","items","map","i","imgStyle","thumbnail","className","ref","el","tabIndex","onClick","onCharSelected","onKeyPress","e","key","children","src","alt","name","style","fileName","_jsxFileName","lineNumber","columnNumber","errorMessage","spinner","content","_c","propTypes","func","isRequired","$RefreshReg$"],"sources":["/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/components/charList/CharList.js"],"sourcesContent":["import './charList.scss';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from \"../../services/MarvelService\";\nimport {useEffect,useState,useRef} from \"react\";\nimport {PropTypes} from \"prop-types\";\n\nconst CharList = (props) =>  {\n\n    const [charList, setCharList] = useState([]);\n    const[loading, setLoading] = useState(true);\n    const[error, setError] = useState(false);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(210);\n    const [charEnded, setCharEnded] = useState(false);\n\n\n\n     const marvelService =  useMarvelService();\n\n    useEffect(() => {\n        onRequest();\n    },[])\n\n    const onRequest = (offset) => {\n        onCharListLoading()\n        marvelService.getAllCharacters(offset)\n            .then(onCharListLoaded)\n            .catch(onError)\n    }\n\n    const onCharListLoading = () => {\n        setNewItemLoading(!newItemLoading);\n    }\n\n    const onCharListLoaded = (newCharList) => {\n        let ended = false;\n        if(newCharList.length < 9) {\n            ended = true;\n        }\n\n        setCharList(charList =>[...charList, ...newCharList])\n        setLoading(loading => false);\n        setNewItemLoading(newItemLoading => false)\n        setOffset(offset => offset + 9)\n        setCharEnded(charEnded => ended)\n\n    }\n\n    const itemRefs = useRef([]);\n\n\n\n    const focusOnItem = (id) => {    // id = порядковий номер li в массиві itemRefs\n        itemRefs.current.forEach(item => item.classList.remove('char__item_selected'))\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n    }\n\n    const onError = () => {\n        setError(error => true);\n        setLoading(loading => false);\n    }\n\n   function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    ref={el => itemRefs.current[i] = el}\n                    tabIndex={0}\n                    onClick={() => {\n                    props.onCharSelected(item.id)\n                    focusOnItem(i) }}\n                    onKeyPress={(e) => {\n                        if(e.key === '' || e.key === 'Enter') {\n                            props.onCharSelected(item.id)\n                            focusOnItem(i)}}}>\n                <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                <div className=\"char__name\">{item.name}</div>\n            </li>\n            )\n        });\n\n        return (\n            <ul className='char__grid'>\n                {items}\n            </ul>\n        )\n    }\n    const items = renderItems(charList);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error) ? items : null;\n\n    return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n            <button className=\"button button__main button__long\">\n                <div\n                    className=\"inner\"\n                    onClick={() => onRequest(offset)}\n                    // disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                >load more</div>\n            </button>\n        </div>\n\n)\n}\n\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired,\n}\n\nexport default CharList;"],"mappings":";;AAAA,OAAO,iBAAiB;AACxB,OAAOA,OAAO,MAAM,oBAAoB;AACxC,OAAOC,YAAY,MAAM,8BAA8B;AACvD,OAAOC,aAAa,MAAM,8BAA8B;AACxD,SAAQC,SAAS,EAACC,QAAQ,EAACC,MAAM,QAAO,OAAO;AAC/C,SAAQC,SAAS,QAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErC,MAAMC,QAAQ,GAAIC,KAAK,IAAM;EAAAC,EAAA;EAEzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAK,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAK,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACxC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,GAAG,CAAC;EACzC,MAAM,CAACkB,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAIhD,MAAMoB,aAAa,GAAIC,gBAAgB,CAAC,CAAC;EAE1CtB,SAAS,CAAC,MAAM;IACZuB,SAAS,CAAC,CAAC;EACf,CAAC,EAAC,EAAE,CAAC;EAEL,MAAMA,SAAS,GAAIN,MAAM,IAAK;IAC1BO,iBAAiB,CAAC,CAAC;IACnBH,aAAa,CAACI,gBAAgB,CAACR,MAAM,CAAC,CACjCS,IAAI,CAACC,gBAAgB,CAAC,CACtBC,KAAK,CAACC,OAAO,CAAC;EACvB,CAAC;EAED,MAAML,iBAAiB,GAAGA,CAAA,KAAM;IAC5BR,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACtC,CAAC;EAED,MAAMY,gBAAgB,GAAIG,WAAW,IAAK;IACtC,IAAIC,KAAK,GAAG,KAAK;IACjB,IAAGD,WAAW,CAACE,MAAM,GAAG,CAAC,EAAE;MACvBD,KAAK,GAAG,IAAI;IAChB;IAEArB,WAAW,CAACD,QAAQ,IAAG,CAAC,GAAGA,QAAQ,EAAE,GAAGqB,WAAW,CAAC,CAAC;IACrDlB,UAAU,CAACD,OAAO,IAAI,KAAK,CAAC;IAC5BK,iBAAiB,CAACD,cAAc,IAAI,KAAK,CAAC;IAC1CG,SAAS,CAACD,MAAM,IAAIA,MAAM,GAAG,CAAC,CAAC;IAC/BG,YAAY,CAACD,SAAS,IAAIY,KAAK,CAAC;EAEpC,CAAC;EAED,MAAME,QAAQ,GAAG/B,MAAM,CAAC,EAAE,CAAC;EAI3B,MAAMgC,WAAW,GAAIC,EAAE,IAAK;IAAK;IAC7BF,QAAQ,CAACG,OAAO,CAACC,OAAO,CAACC,IAAI,IAAIA,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,qBAAqB,CAAC,CAAC;IAC9EP,QAAQ,CAACG,OAAO,CAACD,EAAE,CAAC,CAACI,SAAS,CAACE,GAAG,CAAC,qBAAqB,CAAC;IACzDR,QAAQ,CAACG,OAAO,CAACD,EAAE,CAAC,CAACO,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,MAAMb,OAAO,GAAGA,CAAA,KAAM;IAClBf,QAAQ,CAACD,KAAK,IAAI,IAAI,CAAC;IACvBD,UAAU,CAACD,OAAO,IAAI,KAAK,CAAC;EAChC,CAAC;EAEF,SAASgC,WAAWA,CAACC,GAAG,EAAE;IACrB,MAAMC,KAAK,GAAGD,GAAG,CAACE,GAAG,CAAC,CAACR,IAAI,EAAES,CAAC,KAAK;MAC/B,IAAIC,QAAQ,GAAG;QAAC,WAAW,EAAG;MAAO,CAAC;MACtC,IAAIV,IAAI,CAACW,SAAS,KAAK,qEAAqE,EAAE;QAC1FD,QAAQ,GAAG;UAAC,WAAW,EAAG;QAAO,CAAC;MACtC;MAEA,oBACI3C,OAAA;QACI6C,SAAS,EAAC,YAAY;QAEtBC,GAAG,EAAEC,EAAE,IAAInB,QAAQ,CAACG,OAAO,CAACW,CAAC,CAAC,GAAGK,EAAG;QACpCC,QAAQ,EAAE,CAAE;QACZC,OAAO,EAAEA,CAAA,KAAM;UACf/C,KAAK,CAACgD,cAAc,CAACjB,IAAI,CAACH,EAAE,CAAC;UAC7BD,WAAW,CAACa,CAAC,CAAC;QAAC,CAAE;QACjBS,UAAU,EAAGC,CAAC,IAAK;UACf,IAAGA,CAAC,CAACC,GAAG,KAAK,EAAE,IAAID,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;YAClCnD,KAAK,CAACgD,cAAc,CAACjB,IAAI,CAACH,EAAE,CAAC;YAC7BD,WAAW,CAACa,CAAC,CAAC;UAAA;QAAC,CAAE;QAAAY,QAAA,gBAC7BtD,OAAA;UAAKuD,GAAG,EAAEtB,IAAI,CAACW,SAAU;UAACY,GAAG,EAAEvB,IAAI,CAACwB,IAAK;UAACC,KAAK,EAAEf;QAAS;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC5D9D,OAAA;UAAK6C,SAAS,EAAC,YAAY;UAAAS,QAAA,EAAErB,IAAI,CAACwB;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAXpC7B,IAAI,CAACH,EAAE;QAAA6B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYhB,CAAC;IAET,CAAC,CAAC;IAEF,oBACI9D,OAAA;MAAI6C,SAAS,EAAC,YAAY;MAAAS,QAAA,EACrBd;IAAK;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEb;EACA,MAAMtB,KAAK,GAAGF,WAAW,CAAClC,QAAQ,CAAC;EAEnC,MAAM2D,YAAY,GAAGvD,KAAK,gBAAGR,OAAA,CAACP,YAAY;IAAAkE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,GAAG,IAAI;EACnD,MAAME,OAAO,GAAG1D,OAAO,gBAAGN,OAAA,CAACR,OAAO;IAAAmE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC,GAAG,IAAI;EAC3C,MAAMG,OAAO,GAAG,EAAE3D,OAAO,IAAIE,KAAK,CAAC,GAAGgC,KAAK,GAAG,IAAI;EAElD,oBACQxC,OAAA;IAAK6C,SAAS,EAAC,YAAY;IAAAS,QAAA,GACtBS,YAAY,EACZC,OAAO,EACPC,OAAO,eACZjE,OAAA;MAAQ6C,SAAS,EAAC,kCAAkC;MAAAS,QAAA,eAChDtD,OAAA;QACI6C,SAAS,EAAC,OAAO;QACjBI,OAAO,EAAEA,CAAA,KAAM/B,SAAS,CAACN,MAAM;QAC/B;QAAA;QACA8C,KAAK,EAAE;UAAC,SAAS,EAAE5C,SAAS,GAAG,MAAM,GAAG;QAAO,CAAE;QAAAwC,QAAA,EACpD;MAAS;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAGd,CAAC;AAAA3D,EAAA,CA/GKF,QAAQ;AAAAiE,EAAA,GAARjE,QAAQ;AAiHdA,QAAQ,CAACkE,SAAS,GAAG;EACjBjB,cAAc,EAAEpD,SAAS,CAACsE,IAAI,CAACC;AACnC,CAAC;AAED,eAAepE,QAAQ;AAAC,IAAAiE,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
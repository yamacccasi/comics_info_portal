{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useCallback } from \"react\";\nconst useHttp = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = 'GET', body = null, headers = {\n    'Content-Type': 'application/json'\n  }) => {\n    setLoading(true);\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      if (!response.ok) {\n        throw new Error(`Could not feth ${url}, status ${response.status}`);\n      }\n      const data = await response.json();\n      setLoading(false);\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n  const cleanError = useCallback(() => {\n    setError(null);\n  }, []);\n  return {\n    loading,\n    request,\n    error,\n    cleanError\n  };\n};\n_s(useHttp, \"ml6xwoJZEEdWU7JAJJvjhdt2RcQ=\");\nexport default useHttp;","map":{"version":3,"names":["useState","useCallback","useHttp","_s","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","ok","Error","status","data","json","e","message","cleanError"],"sources":["/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/hooks/http.hook.js"],"sourcesContent":["import { useState, useCallback } from \"react\";\n\n\nconst useHttp = () => {\n    const[loading, setLoading] = useState(false);\n    const[error, setError] = useState(null);\n\n   const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'})=>  {\n\n       setLoading(true);\n       try {\n           const response = await fetch(url, {method,body,headers})\n\n           if(!response.ok) {\n               throw new Error(`Could not feth ${url}, status ${response.status}`);\n           }\n           const data = await response.json()\n           setLoading(false);\n\n       } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n       }\n   },[])\n\n    const cleanError = useCallback(() => {\n        setError(null)\n    }, [])\n    return {loading,request,error,cleanError}\n}\n\nexport default useHttp\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAG7C,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC5C,MAAK,CAACM,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMQ,OAAO,GAAGP,WAAW,CAAC,OAAOQ,GAAG,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,OAAO,GAAG;IAAC,cAAc,EAAE;EAAkB,CAAC,KAAK;IAEpHP,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACA,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAG,EAAE;QAACC,MAAM;QAACC,IAAI;QAACC;MAAO,CAAC,CAAC;MAExD,IAAG,CAACC,QAAQ,CAACE,EAAE,EAAE;QACb,MAAM,IAAIC,KAAK,CAAE,kBAAiBP,GAAI,YAAWI,QAAQ,CAACI,MAAO,EAAC,CAAC;MACvE;MACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCd,UAAU,CAAC,KAAK,CAAC;IAErB,CAAC,CAAC,OAAOe,CAAC,EAAE;MACXf,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAACa,CAAC,CAACC,OAAO,CAAC;MACnB,MAAMD,CAAC;IACR;EACJ,CAAC,EAAC,EAAE,CAAC;EAEJ,MAAME,UAAU,GAAGrB,WAAW,CAAC,MAAM;IACjCM,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EACN,OAAO;IAACH,OAAO;IAACI,OAAO;IAACF,KAAK;IAACgB;EAAU,CAAC;AAC7C,CAAC;AAAAnB,EAAA,CA3BKD,OAAO;AA6Bb,eAAeA,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/components/randomChar/RandomChar.js\",\n  _s = $RefreshSig$();\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { useEffect, useState } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomChar = () => {\n  _s();\n  const [char, setChar] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    updateChar();\n  }, []);\n  const marvelService = new MarvelService();\n  const onCharLoaded = char => {\n    setChar(char);\n    setLoading(loading => false);\n  };\n  const onError = error => {\n    this.setState({\n      loading: false,\n      error: true\n    });\n    setLoading(loading => false);\n    setError(error => true);\n  };\n  const updateChar = () => {\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); // створюємо рандомний id для запиту;\n    marvelService.getCharacter(id).then(onCharLoaded).catch(onError); // робимо запит по згенерованому id, після чого відповідь прокидуєм через функцію CharLoaded\n  };\n  const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 38\n  }, this) : null;\n  const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 35\n  }, this) : null;\n  const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n    char: char\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 47\n  }, this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar\",\n    children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__static\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 48\n        }, this), \"Do you want to get to know him better?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__title\",\n        children: \"Or choose another one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button__main\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inner\",\n          onClick: updateChar,\n          children: \"try it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mjolnir,\n        alt: \"mjolnir\",\n        className: \"randomchar__decoration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n_s(RandomChar, \"QbXhfcak0IPNDEdYeGJSa0dA4EQ=\");\n_c = RandomChar;\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 19\n  }, this);\n};\n_c2 = View;\nexport default RandomChar;\nvar _c, _c2;\n$RefreshReg$(_c, \"RandomChar\");\n$RefreshReg$(_c2, \"View\");","map":{"version":3,"names":["mjolnir","useEffect","useState","MarvelService","Spinner","ErrorMessage","jsxDEV","_jsxDEV","RandomChar","_s","char","setChar","loading","setLoading","error","setError","updateChar","marvelService","onCharLoaded","onError","setState","id","Math","floor","random","getCharacter","then","catch","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","spinner","content","View","className","children","onClick","src","alt","_c","name","description","thumbnail","homepage","wiki","href","_c2","$RefreshReg$"],"sources":["/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/components/randomChar/RandomChar.js"],"sourcesContent":["import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport {useEffect, useState} from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst RandomChar = () =>  {\n\n    const [char, setChar] = useState(null);\n    const[loading, setLoading] = useState(true);\n    const[error, setError] = useState(false);\n\n\n\n    useEffect(()=> {\n        updateChar()\n    }, [])\n\n\n    const marvelService = new MarvelService();\n\n\n\n   const  onCharLoaded = (char) => {\n        setChar(char);\n        setLoading(loading => false)\n    }\n\n    const onError = (error) => {\n        this.setState({loading: false, error: true});\n        setLoading(loading => false)\n        setError(error => true)\n\n    }\n\n      const  updateChar = () => {\n            const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000) // створюємо рандомний id для запиту;\n            marvelService.getCharacter(id).then(onCharLoaded).catch(onError)  // робимо запит по згенерованому id, після чого відповідь прокидуєм через функцію CharLoaded\n    }\n\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null\n\n       return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\">\n                    <div className=\"inner\" onClick={updateChar}>try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n\n}\n\nconst View = ({char}) => {\n    const {name,description,thumbnail,homepage,wiki} = char;\n\n        return (  <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>)\n\n}\n\nexport default RandomChar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
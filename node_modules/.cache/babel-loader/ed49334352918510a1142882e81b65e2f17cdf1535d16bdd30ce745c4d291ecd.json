{"ast":null,"code":"var _jsxFileName = \"/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/components/randomChar/RandomChar.js\";\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass RandomChar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      char: {},\n      loading: true,\n      error: false\n    };\n    this.marvelService = new MarvelService();\n    this.onCharLoaded = char => {\n      this.setState({\n        char: char,\n        loading: false\n      });\n    };\n    this.onError = error => {\n      this.setState({\n        loading: false,\n        error: true\n      });\n    };\n    this.updateChar = () => {\n      const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000); // створюємо рандомний id для запиту;\n      this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError); // робимо запит по згенерованому id, після чого відповідь прокидуєм через функцію CharLoaded\n      console.log('update');\n    };\n    setInterval(this.updateChar, 3000);\n  }\n  render() {\n    const {\n      char,\n      loading,\n      error\n    } = this.state;\n    const errorMessage = error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 38\n    }, this) : null;\n    const spinner = loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 35\n    }, this) : null;\n    const content = !(loading || error) ? /*#__PURE__*/_jsxDEV(View, {\n      char: char\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 47\n    }, this) : null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar\",\n      children: [errorMessage, spinner, content, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__static\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: [\"Random character for today!\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 48\n          }, this), \"Do you want to get to know him better?\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"randomchar__title\",\n          children: \"Or choose another one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"try it\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: mjolnir,\n          alt: \"mjolnir\",\n          className: \"randomchar__decoration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this);\n  }\n}\nconst View = ({\n  char\n}) => {\n  const {\n    name,\n    description,\n    thumbnail,\n    homepage,\n    wiki\n  } = char;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"randomchar__block\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: thumbnail,\n      alt: \"Random character\",\n      className: \"randomchar__img\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"randomchar__info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__name\",\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"randomchar__descr\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"randomchar__btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: homepage,\n          className: \"button button__main\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"homepage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: wiki,\n          className: \"button button__secondary\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inner\",\n            children: \"Wiki\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 19\n  }, this);\n};\n_c = View;\nexport default RandomChar;\nvar _c;\n$RefreshReg$(_c, \"View\");","map":{"version":3,"names":["mjolnir","Component","MarvelService","Spinner","ErrorMessage","jsxDEV","_jsxDEV","RandomChar","constructor","props","state","char","loading","error","marvelService","onCharLoaded","setState","onError","updateChar","id","Math","floor","random","getCharacter","then","catch","console","log","setInterval","render","errorMessage","fileName","_jsxFileName","lineNumber","columnNumber","spinner","content","View","className","children","src","alt","name","description","thumbnail","homepage","wiki","href","_c","$RefreshReg$"],"sources":["/Users/maxympetlyak/Desktop/REACT/marvel_starter/src/components/randomChar/RandomChar.js"],"sourcesContent":["import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport {Component} from \"react\";\nimport MarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass RandomChar extends Component {\n    constructor(props) {\n        super(props);\n        setInterval(this.updateChar, 3000);\n    }\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n\n\n     marvelService = new MarvelService();\n\n    onCharLoaded = (char) => {\n        this.setState({char: char, loading: false});\n    }\n\n    onError = (error) => {\n        this.setState({loading: false, error: true});\n\n    }\n\n        updateChar = () => {\n            const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000) // створюємо рандомний id для запиту;\n            this.marvelService.getCharacter(id).then(this.onCharLoaded).catch(this.onError)  // робимо запит по згенерованому id, після чого відповідь прокидуєм через функцію CharLoaded\n            console.log('update')\n    }\n\n\n\n   render() {\n        const {char , loading,error} = this.state;\n        const errorMessage = error ? <ErrorMessage/> : null\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null\n\n       return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n   }\n\n}\n\nconst View = ({char}) => {\n    const {name,description,thumbnail,homepage,wiki} = char;\n\n        return (  <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>)\n\n}\n\nexport default RandomChar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}